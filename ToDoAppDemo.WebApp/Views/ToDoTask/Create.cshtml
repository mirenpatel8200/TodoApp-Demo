@model ToDoAppDemo.WebApp.Models.ToDoTaskDto

@{
    ViewData["Title"] = Model.Id > 0 ? "Edit" : "Create";
}


@if (Model.Id > 0)
{
    <h2>Edit</h2>
}
else
{
    <h2>Create</h2>
}


@if (!string.IsNullOrEmpty(ViewBag.ErrorMessage))
{
    <div class="alert alert-danger" role="alert">
        @ViewBag.ErrorMessage
    </div>
}
<div class="row">
    <div class="col-md-6">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" name="Id" value="@Model.Id"/>
            @* <div class="form-group">
                <label asp-for="Id" class="control-label"></label>
                <input asp-for="Id" class="form-control" />
                <span asp-validation-for="Id" class="text-danger"></span>
            </div> *@
            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <textarea asp-for="Description" class="form-control" rows="5"></textarea>
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            <br />
            <div class="form-group">
                @if (Model.Id > 0)
                {
                    <input type="submit" value="Update" class="btn btn-primary" />
                }
                else
                {
                    <input type="submit" value="Create" class="btn btn-primary" />
                }
                
                <a class="btn btn-secondary" asp-action="Index">Back to List</a>
            </div>
        </form>
    </div>
</div>

<div>
    
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
